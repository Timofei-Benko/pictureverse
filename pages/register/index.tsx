import type { NextPage } from 'next';
import { useRouter } from 'next/router';
import { FormEvent, useCallback, useState } from 'react';
import { useMutation } from '@apollo/client';
import { Form } from '../../components/Form';
import { CREATE_USER } from '../../gql/CreateUser';
import { routes } from '../../constants/routes';

const Login: NextPage = () => {
	const [email, setEmail] = useState('');
	const [password, setPassword] = useState('');
	const [errorMessage, setErrorMessage] = useState<string | null>(null);
	const router = useRouter();
	const [createUser] = useMutation(CREATE_USER, {
		variables: {
			input: {
				email,
				password,
			},
		},
		onCompleted: ({ createUser }) => {
			// TODO: decide on a better way to deal with autogenerated union types of this kind
			if ('message' in createUser && createUser.message) {
				setErrorMessage(createUser.message);
			} else {
				router.push(routes.login);
			}
		}
	});
    
	const handleSubmit = useCallback(async (e: FormEvent) => {
		e.preventDefault();
		await createUser();
	}, [createUser]);

	return (
		<Form
			title='Sign Up'
			onSubmit={handleSubmit}
			errorMessage={errorMessage}
		>
			<Form.Input
				type='email'
				placeholder='email'
				value={email}
				onChange={(e) => setEmail(e.target.value)}
			/>
			<Form.Input
				type='text'
				placeholder='username'
				value={password}
				onChange={(e) => setPassword(e.target.value)}
			/>
			<Form.BottomLink href={routes.login}>Already have an account? Sign in</Form.BottomLink>
		</Form>
	);
};

export default Login;
